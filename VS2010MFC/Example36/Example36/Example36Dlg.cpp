
// Example36Dlg.cpp : 实现文件
//

#include "stdafx.h"
#include "Example36.h"
#include "Example36Dlg.h"
#include "afxdialogex.h"

#ifdef _DEBUG
#define new DEBUG_NEW
#endif


// 用于应用程序“关于”菜单项的 CAboutDlg 对话框

class CAboutDlg : public CDialogEx
{
public:
	CAboutDlg();

// 对话框数据
	enum { IDD = IDD_ABOUTBOX };

	protected:
	virtual void DoDataExchange(CDataExchange* pDX);    // DDX/DDV 支持

// 实现
protected:
	DECLARE_MESSAGE_MAP()
};

CAboutDlg::CAboutDlg() : CDialogEx(CAboutDlg::IDD)
{
}

void CAboutDlg::DoDataExchange(CDataExchange* pDX)
{
	CDialogEx::DoDataExchange(pDX);
}

BEGIN_MESSAGE_MAP(CAboutDlg, CDialogEx)
END_MESSAGE_MAP()


// CExample36Dlg 对话框




CExample36Dlg::CExample36Dlg(CWnd* pParent /*=NULL*/)
	: CDialogEx(CExample36Dlg::IDD, pParent)
{
	m_hIcon = AfxGetApp()->LoadIcon(IDR_MAINFRAME);
}

void CExample36Dlg::DoDataExchange(CDataExchange* pDX)
{
	CDialogEx::DoDataExchange(pDX);
	DDX_Control(pDX, IDC_COLOR_SHOW_STATIC, m_picColor);
}

BEGIN_MESSAGE_MAP(CExample36Dlg, CDialogEx)
	ON_WM_SYSCOMMAND()
	ON_WM_PAINT()
	ON_WM_QUERYDRAGICON()
	ON_BN_CLICKED(IDC_COLOR_SEL_BUTTON, &CExample36Dlg::OnBnClickedColorSelButton)
END_MESSAGE_MAP()


// CExample36Dlg 消息处理程序

BOOL CExample36Dlg::OnInitDialog()
{
	CDialogEx::OnInitDialog();

	// 将“关于...”菜单项添加到系统菜单中。

	// IDM_ABOUTBOX 必须在系统命令范围内。
	ASSERT((IDM_ABOUTBOX & 0xFFF0) == IDM_ABOUTBOX);
	ASSERT(IDM_ABOUTBOX < 0xF000);

	CMenu* pSysMenu = GetSystemMenu(FALSE);
	if (pSysMenu != NULL)
	{
		BOOL bNameValid;
		CString strAboutMenu;
		bNameValid = strAboutMenu.LoadString(IDS_ABOUTBOX);
		ASSERT(bNameValid);
		if (!strAboutMenu.IsEmpty())
		{
			pSysMenu->AppendMenu(MF_SEPARATOR);
			pSysMenu->AppendMenu(MF_STRING, IDM_ABOUTBOX, strAboutMenu);
		}
	}

	// 设置此对话框的图标。当应用程序主窗口不是对话框时，框架将自动
	//  执行此操作
	SetIcon(m_hIcon, TRUE);			// 设置大图标
	SetIcon(m_hIcon, FALSE);		// 设置小图标

	// TODO: 在此添加额外的初始化代码

	return TRUE;  // 除非将焦点设置到控件，否则返回 TRUE
}

void CExample36Dlg::OnSysCommand(UINT nID, LPARAM lParam)
{
	if ((nID & 0xFFF0) == IDM_ABOUTBOX)
	{
		CAboutDlg dlgAbout;
		dlgAbout.DoModal();
	}
	else
	{
		CDialogEx::OnSysCommand(nID, lParam);
	}
}

// 如果向对话框添加最小化按钮，则需要下面的代码
//  来绘制该图标。对于使用文档/视图模型的 MFC 应用程序，
//  这将由框架自动完成。

void CExample36Dlg::OnPaint()
{
	if (IsIconic())
	{
		CPaintDC dc(this); // 用于绘制的设备上下文

		SendMessage(WM_ICONERASEBKGND, reinterpret_cast<WPARAM>(dc.GetSafeHdc()), 0);

		// 使图标在工作区矩形中居中
		int cxIcon = GetSystemMetrics(SM_CXICON);
		int cyIcon = GetSystemMetrics(SM_CYICON);
		CRect rect;
		GetClientRect(&rect);
		int x = (rect.Width() - cxIcon + 1) / 2;
		int y = (rect.Height() - cyIcon + 1) / 2;

		// 绘制图标
		dc.DrawIcon(x, y, m_hIcon);
	}
	else
	{
		CDialogEx::OnPaint();
	}
}

//当用户拖动最小化窗口时系统调用此函数取得光标
//显示。
HCURSOR CExample36Dlg::OnQueryDragIcon()
{
	return static_cast<HCURSOR>(m_hIcon);
}



void CExample36Dlg::OnBnClickedColorSelButton()
{
	// TODO: 在此添加控件通知处理程序代码

	COLORREF color=RGB(255,0,0);	//颜色对话框的初始颜色
	CColorDialog colorDlg(color);	//构造颜色对话框，初始颜色为红色
	CRect rectPicture;				//图片控件的矩形区域坐标
	CBrush newBrush;				//创建的新画刷
	CBrush* pOldBrush;				//旧画刷的指针
	CClientDC clientDC(this);		//构造客户区的设备上下文对象

	if(colorDlg.DoModal()==IDOK)	//显示颜色对话框
	{
	   //如果点击了颜色对话框的“确定”按钮，则执行一下操作

		//获取颜色对话框中选择的颜色
		color=colorDlg.GetColor();
		//用选择的颜色创建新画刷
		newBrush.CreateSolidBrush(color);
		//获取图片控件矩形区域的屏幕坐标
		m_picColor.GetWindowRect(&rectPicture);
		//将图片控件矩形区域的屏幕坐标换为其父窗口即对话框的客户区坐标
		ScreenToClient(&rectPicture);

		//选择新画刷，并保存旧画刷的指针到pOldBrush
		pOldBrush=clientDC.SelectObject(&newBrush);
		//以新画刷为图片控件填充颜色
		clientDC.Rectangle(rectPicture);

		//恢复旧画刷
		clientDC.SelectObject(pOldBrush);
		//删除新画刷
		newBrush.DeleteObject();
	}
}
