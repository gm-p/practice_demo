50. Pow(x, n)
实现 pow(x, n) ，即计算 x 的 n 次幂函数。
class Solution {
public:
    double myPow(double x, int n) {
        double res = 1;
        bool negative = false;
        if(n < 0)
            negative =true;
        while(n)
        {
            if(n % 2)
                res *= x;
            x = x * x;
            n /= 2;
        }
        if(negative)
            res = 1.0 / res;
        return res;
    }
};

53. 最大子序和
给定一个整数数组 nums ，找到一个具有最大和的连续子数组（子数组最少包含一个元素），返回其最大和
class Solution {
public:
    int maxSubArray(vector<int>& nums) {
        int res = INT_MIN;
        int n = nums.size();
        int sum = 0;
        for(int i=0; i<n; i++)
        {
            sum = max(sum + nums[i], nums[i]);
            res = max(res, sum);
        }
        return res;
    }
};