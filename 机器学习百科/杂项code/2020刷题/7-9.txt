233.数字1的个数
给定一个整数 n，计算所有小于等于 n 的非负整数中数字 1 出现的个数。
输入: 13
输出: 6 
解释: 数字 1 出现在以下数字中: 1, 10, 11, 12, 13 。
class Solution {
public:
    int countDigitOne(int n) {
         int count = 0;
        for(long i=1; i<=n; i*=10)
        {
            long divider = i * 10;
            int remainder = n % divider;
            if(remainder >= 2 * i)
                count += (n / divider)*i + i;
            else if(remainder >= i)
                count += (n / divider)*i + n % divider - i + 1;
            else
                count += (n / divider)*i;
        }
        return count;
    }
};

400.第N个数字
在无限的整数序列?1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, ...中找到第?n?个数字。

注意:
n?是正数且在32为整形范围内?(?n < 231)。


分析：
1~9: 9
10~99：90*2
100~999:900*3
*/
#include <cmath>
class Solution
{
public:
??? int findNthDigit(int n)
??? {
??????? if(n<0) return 0;
??????? //计算目标数的位数
??????? int digits = 1; //单个数的位数
??????? long base = 9; //某位数的个数 ,为了满足题目n的范围要求，设置为long型
??????? while(n - base*digits > 0)
??????? {
??????????? n -= base*digits; //不断减去k位数的个数，直到到目标数的位数
??????????? base*=10;
??????????? digits++; //当前位数
??????? } //跳出循环时，digits为目标数位数,n为剩余需要计数的总位数
???????
??????? //计算是哪个目标数
??????? int firstnum = pow(10,digits-1); //当前数位中第一个数，如1、10、100
??????? int objnum = firstnum;
??????? int index = n % digits; //index标识要找的数在目标数中哪个位置(从左往右数)
??????? if(index == 0)??//说明在目标数的最后一位
??????? {
??????????? index = digits;
??????????? objnum = firstnum + n/digits -1; //注意减1，如100，n = 3，则在100最后一位
??????? }?
??????? else
??????????? objnum = firstnum + n/digits; //如 n=4,则在101第一位
???????
??????? //找出是目标数中哪个数字
??????? for(int i = index; i<digits; i++) objnum/=10; //除到目标位为个位
??????? return objnum%10;
???????????
??? }
};