344.反转字符串
编写一个函数，其作用是将输入的字符串反转过来。输入字符串以字符数组 char[] 的形式给出。

不要给另外的数组分配额外的空间，你必须原地修改输入数组、使用 O(1) 的额外空间解决这一问题。

你可以假设数组中的所有字符都是 ASCII 码表中的可打印字符。
class Solution {
public:
    void reverseString(vector<char>& s) {
        int n = s.size();
        if(n < 1)
            return;
        int i = 0, j = n-1;
        while(i < j)
        {
            swap(s[i], s[j]);
            i++;
            j--;
        }
    }
};

7.整数反转
给出一个 32 位的有符号整数，你需要将这个整数中每位上的数字进行反转。
示例?1:

输入: 123
输出: 321
?
示例 2:

输入: -123
输出: -321

示例 3:

输入: 120
输出: 21

注意:

假设我们的环境只能存储得下 32 位的有符号整数，则其数值范围为?[?231,? 231?? 1]。
请根据这个假设，如果反转后整数溢出那么就返回 0。


class Solution {
public:
    int reverse(int x) {
        string s = to_string(x);
        reverse_str(s);
        try
        {
            return stoi(s);
        }catch(...)
        {
            return 0;
        }
        //return stoi(s);
    }
    void reverse_str(string& s)
    {
        int n = s.size();
        if(n < 1)
            return;
        int i = 0, j = n-1;
        if(!isdigit(s[i]))
            i++;
        while(i < j)
        {
            swap(s[i], s[j]);
            i++;
            j--;
        }
    }
};
