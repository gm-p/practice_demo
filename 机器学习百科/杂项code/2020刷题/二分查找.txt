查找和目标值相等的数
int find(vector<int>& a, int target)
{
	int left = 0, right = a.size()-1;
	while(left <= right)
	{
		int mid = (left + right) / 2;
		if(a[mid] == target)
			return mid;
		else if(a[mid] < target)
			left = mid + 1;
		else
			right = mid - 1;
	}
	return -1;
}

查找第一个大于等于目标值的数
int my_lowerbound(vector<int>& a, int target)
{
	int left = 0, right = a.size();
	while(left < right)
	{
		int mid = left + (right - left) / 2;
		if(a[mid] < target)
			left = mid + 1;
		else
			right = mid;
	}
	return right;
}

查找第一个大于目标值的数
int my_upperbound(vector<int>& a, int target)
{
	int left = 0, right = a.size();
	while(left < right)
	{
		int mid = left + (right - left) / 2;
		if(a[mid] <= target)
			left = mid + 1;
		else
			right = mid;
	}
	return right;
}