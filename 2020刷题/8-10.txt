70. 爬楼梯
假设你正在爬楼梯。需要 n 阶你才能到达楼顶。
每次你可以爬 1 或 2 个台阶。你有多少种不同的方法可以爬到楼顶呢？
注意：给定 n 是一个正整数。
class Solution {
public:
    int climbStairs(int n) {
        if(n == 1)
            return 1;
        else if(n == 2)
            return 2;
        int a = 1, b = 2;
        for(int i=3; i<=n; i++)
        {
            int tmp = a + b;
            a = b;
            b = tmp;
        }
        return b;
    }
}; 递推公式dp[i]=dp[i?1]+dp[i?2]

剪绳子
f(n)=max(f(i)*f(n-i))，其中i = 1,2,3...n/2