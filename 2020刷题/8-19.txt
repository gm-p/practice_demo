22. 括号生成
给出 n 代表生成括号的对数，请你写出一个函数，使其能够生成所有可能的并且有效的括号组合。
class Solution {
public:
    vector<string> generateParenthesis(int n) {
        vector<string> res;
        recursion(res, "", 0, 0, n);
        return res;
    }
    void recursion(vector<string>& res, string s, int left, int right, int n)
    {
        if(s.size() == 2 * n)
        {
            res.push_back(s);
            return ;
        }
        if(left < n)
            recursion(res, s+'(', left+1, right, n);
        if(right < left)
            recursion(res, s+')', left, right+1, n);
    }
};

17. 电话号码的字母组合
给定一个仅包含数字 2-9 的字符串，返回所有它能表示的字母组合。
给出数字到字母的映射如下（与电话按键相同）。注意 1 不对应任何字母。
class Solution {
public:
    vector<string> letterCombinations(string digits) {
        if(digits.empty())
            return vector<string>();
        vector<string> res;
        res.push_back("");
        unordered_map<char, string> dict = {{'2', "abc"},
                                            {'3', "def"},
                                            {'4', "ghi"},
                                            {'5', "jkl"},
                                            {'6', "mno"},
                                            {'7', "pqrs"},
                                            {'8', "tuv"},
                                            {'9', "wxyz"}};
        for(char c: digits)
        {
            if(dict.find(c) == dict.end())
                continue;
            string& val = dict[c];
            vector<string> tmp;
            for(string& s: res)
            {
                for(char ci: val)
                {
                    tmp.push_back(s+ci);
                }
            }
            res.swap(tmp);
        }
        return res;
    }
};